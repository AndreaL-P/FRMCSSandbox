sequenceDiagram
    participant App_A as ETCS OBU
    participant GW_A as OB FRMCS
    participant UE_A as Radio Module A
    participant RS as Resolution Service
    participant TD_A1 as Transport Domain A
    participant SD_A1 as Service Server Domain A
    participant GW_B as TS Gateway 1
    participant App_B as RBC 1
	participant GW_C as TS Gateway 2
    participant App_C as RBC 2

    rect rgb(230, 240, 255)
        Note over App_A, App_B: PHASE 1: Initial Setup and Applicative Session Establishment

        %% Initial Transport & Service Domain Registration
        App_A->>GW_A: Local binding
        GW_A->>UE_A: Transport Registration request
        UE_A->>TD_A1: Transport Registration (RRC Connection + NAS)
        TD_A1->>UE_A: Transport Registration Confirm
        UE_A->>GW_A: Transport Domain Available
        GW_A->>App_A: FTD Available notif (optional)
        GW_A->>SD_A1: Service Registration<br>(FRMCS service domain: MCx, ...)
        SD_A1->>GW_A: Service Registration Confirm
        GW_A->>App_A: FSD available notif
        
        GW_B->>SD_A1: Service Registration
        SD_A1->>GW_B: Service Registration Confirm
        GW_B->App_B: FSD available notif

        %% Application Session Establishment
        App_A->>GW_A: Application Session Request(App_A_ID, App_B_ID)
        
        %% Resolution of App ID to Service ID via Resolution Service
        GW_A->>RS: Resolution Request(App_B_ID)
        RS->>GW_A: Resolution Response(GWB_Service_ID, GW_B)
        
        %% Generate Authentication Material
        GW_A->>GW_A: Generate temporary key pair for App Session information (OGW_AppSessPrivKey, OGW_AppSessPubKey)
        Note right of GW_A: App Session ID = 123 assigned
        
        %% Establish Service Session(s) via Service Domain
        loop for each intended service session
            GW_A->>SD_A1: Service Session Request (GWB_Service_ID)
            Note right of GW_A: Service Session ID = 1 assigned
            SD_A1->>GW_B: Service Session Request Delivery
            
            %% Session Authentication & Identification Exchange
            GW_A->>GW_B: AppSessionInformation (App_Sess_ID=123, Serv_Sess_ID=1, RequestTime=t1) + OBGW_AppSessPubKey
            Note right of GW_A: Signed with OGW_AppSessPrivKey<br>(OGW_AppSessPubKey in clear and<br>sent only for the first service session of the Applicative session)
            
            GW_B->>GW_B: Generate temporary key pair for App Session information (DGW_AppSessPrivKey, DGW_AppSessPubKey)
            GW_B->>GW_B: Map to App_B_ID & store session data
            GW_B->>App_B: Application Session Notification(App_A_ID)
            
            App_B->>GW_B: Accept Session
            
            GW_B->>GW_A: Response(Dest_App_Sess_ID=18, AcceptTime=t2) + DGW_AppSessPublicKey
            Note left of GW_B: Signed with DGW_AppSessPrivKey<br>(DGW_AppSessPubKey in clear and sent<br>only for the first service session of the Applicative session)
        end
        GW_A->>App_A: Application Session Established
        
        %% Media Flow Establishment
        App_A->>App_B: Application Data Flow <br> (using the service session(s) created)
    end

    rect rgb(230, 240, 255)
        Note over App_A, App_C: PHASE 2: Applicative Handover
        %% Application Session Establishment
        App_A->>GW_A: Application Session Request(App_A_ID, App_C_ID)
        
        %% Resolution of App ID to Service ID via Resolution Service
        GW_A->>RS: Resolution Request(App_C_ID)
        RS->>GW_A: Resolution Response(GWC_Service_ID, GW_C)
        
        %% Generate Authentication Material
        GW_A->>GW_A: Generate temporary key pair for App Session information (OGW_AppSessPrivKey, OGW_AppSessPubKey)
        Note right of GW_A: App Session ID = 127 assigned
        
        %% Establish Service Session(s) via Service Domain
        loop for each intended service session
            GW_A->>SD_A1: Service Session Request (GWC_Service_ID)
            Note right of GW_A: Service Session ID = 1 assigned
            SD_A1->>GW_C: Service Session Request Delivery
            
            %% Session Authentication & Identification Exchange
            GW_A->>GW_C: AppSessionInformation (App_Sess_ID=127, Serv_Sess_ID=1, RequestTime=t2) + OBGW_AppSessPubKey
            Note right of GW_A: Signed with OGW_AppSessPrivKey<br>(OGW_AppSessPubKey in clear and<br>sent only for the first service session of the Applicative session)
            
            GW_C->>GW_C: Generate temporary key pair for App Session information (DGW_AppSessPrivKey, DGW_AppSessPubKey)
            GW_C->>GW_C: Map to App_B_ID & store session data
            GW_C->>App_C: Application Session Notification(App_A_ID)
            
            App_C->>GW_C: Accept Session
            
            GW_C->>GW_A: Response(Dest_App_Sess_ID=42, AcceptTime=t2) + DGW_AppSessPublicKey
            Note left of GW_C: Signed with DGW_AppSessPrivKey<br>(DGW_AppSessPubKey in clear and sent<br>only for the first service session of the Applicative session)
        end
        GW_A->>App_A: Application Session Established
        
        %% Media Flow Establishment
        App_A->>App_C: Application Data Flow <br> (using the service session(s) created)
        App_A->>GW_A: Applicative session close request for Session 123
        loop for each service session for applciation session 123
            GW_A->>SD_A1: service session close request
            SD_A1->> GW_B: service session close request
            GW_B->>SD_A1: ACK
        end
        GW_B->>App_B: Application session 18 closed notif
    end
    
    